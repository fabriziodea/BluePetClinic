- hosts: nginx
  become: true
  tasks:
   - name: Setup Nginx (Load Balancer)
     apt:
      pkg:
      - nginx
      state: latest
      update_cache: true

- hosts: nginx
  become: true
  tasks:  
  - name: Copy nginx.conf
    template:
      src: nginx.conf
      dest: /etc/nginx/nginx.conf
      force: yes
- hosts: nginx
  become: true
  tasks:    
  - name: Start NGINX
    service:
      name: nginx
      state: started

- hosts: swarmanager, swarmworker
  become: true
  tasks:    
  - name: install git
    apt:
      name: git
      state: present
      update_cache: yes

- hosts: swarmanager, swarmworker
  become: true
  tasks:  
  - name: Install Docker Dependancies
    apt:
      pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3
      - python3-pip
      - python-setuptools
      state: latest
      update_cache: yes
    tags: docker

- hosts: swarmanager, swarmworker
  become: true
  tasks:  
  - name: Install docker
    shell:
      cmd: curl https://get.docker.com | bash

- hosts: swarmanager, swarmworker
  become: true
  tasks:  
  - name: add user to docker group
    ansible.builtin.user:
      name: jenkins
      groups: docker
      append: yes

- hosts: swarmanager, swarmworker
  become: true
  tasks:  
  - name: "Install with pip"
    pip:
      name:
        - docker-py
        - jsondiff
        - requests
        - pyyaml
      executable: pip3

- hosts: swarmanager, swarmworker
  become: true
  tasks:  
  - name: Install the gpg key for nodejs LTS
    apt_key:
      url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
      state: present
 
- hosts: swarmanager, swarmworker
  become: true
  tasks:  
  - name: Install the nodejs LTS repos
    apt_repository:
      repo: "deb https://deb.nodesource.com/node_14.x xenial main"
      state: present
      update_cache: yes

- hosts: swarmanager, swarmworker
  become: true
  tasks:  
  - name: Install the nodejs
    apt:
      name: nodejs
      state: present

- hosts: swarmanager, swarmworker
  become: true
  tasks:  
  - name: copying file with playbook
    copy:
      src: ~/bluescript1.sh
      dest: /home/bluescript1.sh
      mode: "777"
      owner: ubuntu


- hosts: swarmanager, swarmworker
  become: true
  tasks:  
  - name: Run our script
    ansible.builtin.shell:  /home/bluescript1.sh

- hosts: swarmanager, swarmworker
  become: true
  tasks:  
  - name: Initialize docker swarm
    docker_swarm:
      state: present

- hosts: swarmanager
  become: true
  tasks:  
  - name: Get the manager node join-token
    docker_swarm_info:
    register: swarm_info



- hosts: swarmworker
  become: true
  tasks:  
  - name: Join Swarm-Worker
    docker_swarm:
      state: join
      advertise_addr: swarmworker
      join_token: "{{ join_token_manager }}"
      remote_addrs: "{{ swarmanager }}"

- hosts: swarmanager
  become: true
  tasks:  
  - name: "Deploy app"
    docker_stack:
      state: present
      name: bluespring
      compose:
        - /home/jenkins/docker-compose.yaml


